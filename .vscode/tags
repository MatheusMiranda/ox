!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Automata	../src/ox/automata.py	/^class Automata:$/;"	kind:class	line:1
Counter	../src/ox/parser.py	/^from collections import Counter$/;"	kind:namespace	line:1
DFA	../examples/examples.py	/^from ox.automata import DFA$/;"	kind:namespace	line:1
DFA	../src/ox/automata.py	/^class DFA(Automata):$/;"	kind:class	line:85
NFA	../src/ox/automata.py	/^class NFA(Automata):$/;"	kind:class	line:113
Record	../src/ox/lexer.py	/^from sidekick import Record, field, record, fn$/;"	kind:namespace	line:4
TestLexer	../src/ox/tests/test_lexer.py	/^class TestLexer:$/;"	kind:class	line:9
Token	../src/ox/__init__.py	/^from .lexer import make_lexer, tokenize, Token$/;"	kind:namespace	line:4
Token	../src/ox/lexer.py	/^class Token(Record):$/;"	kind:class	line:144
Turing	../src/ox/automata.py	/^class Turing(Automata):$/;"	kind:class	line:120
__author__	../src/ox/__init__.py	/^from .__meta__ import __author__, __version__$/;"	kind:namespace	line:1
__author__	../src/ox/__meta__.py	/^__author__ = 'F\\xe1bio Mac\\xeado Mendes'$/;"	kind:variable	line:3
__call__	../src/ox/automata.py	/^    def __call__(self, tk_seq):$/;"	kind:member	line:79
__eq__	../src/ox/lexer.py	/^    def __eq__(self, other):$/;"	kind:member	line:160
__import__	../src/ox/lexer.py	/^_import = __import__$/;"	kind:namespace	line:7
__init__	../src/ox/automata.py	/^    def __init__(self, **kwargs):$/;"	kind:member	line:31
__init__	../src/ox/automata.py	/^    def __init__(self, **kwargs):$/;"	kind:member	line:95
__init__.py	../src/ox/__init__.py	1;"	kind:file	line:1
__init__.py	../src/ox/tests/__init__.py	1;"	kind:file	line:1
__meta__.py	../src/ox/__meta__.py	1;"	kind:file	line:1
__repr__	../src/ox/lexer.py	/^    def __repr__(self):$/;"	kind:member	line:157
__version__	../src/ox/__init__.py	/^from .__meta__ import __author__, __version__$/;"	kind:namespace	line:1
__version__	../src/ox/__meta__.py	/^__version__ = '0.1.0'$/;"	kind:variable	line:2
_import	../src/ox/lexer.py	/^_import = __import__$/;"	kind:variable	line:7
_import	../src/ox/tests/test_lexer.py	/^        def _import(x):$/;"	kind:function	line:44
_input	../src/ox/lexer.py	/^_input = input$/;"	kind:variable	line:8
_print	../src/ox/lexer.py	/^_print = print$/;"	kind:variable	line:9
_wrapped	../src/ox/tests/test_documentation.py	/^    def _wrapped(func, name):$/;"	kind:function	line:18
accept	../src/ox/automata.py	/^    accept = set()$/;"	kind:variable	line:23
alphabet	../src/ox/automata.py	/^    alphabet = set()$/;"	kind:variable	line:22
author	../docs/conf.py	/^author = 'F\\\\xe1bio Mac\\\\xeado Mendes'$/;"	kind:variable	line:56
author	../setup.py	/^    author='Fábio Macêdo Mendes',$/;"	kind:variable	line:28
author_email	../setup.py	/^    author_email='fabiomacedomendes@gmail.com',$/;"	kind:variable	line:29
automata.py	../src/ox/automata.py	1;"	kind:file	line:1
classifiers	../setup.py	/^    classifiers=[$/;"	kind:variable	line:35
codeblock	../src/ox/tests/test_documentation.py	/^import manuel.codeblock$/;"	kind:namespace	line:5
codecs	../setup.py	/^import codecs$/;"	kind:namespace	line:10
conf.py	../docs/conf.py	1;"	kind:file	line:1
configure	../tasks.py	/^def configure(ctx):$/;"	kind:function	line:7
copyright	../docs/conf.py	/^copyright = '2016, %s' % author$/;"	kind:variable	line:57
description	../examples/examples.py	/^    description="Checks if a string of a's and b's has an a.",$/;"	kind:variable	line:14
description	../examples/examples.py	/^    description="Checks if a string of a's, b's and c's have both a and b.",$/;"	kind:variable	line:45
description	../setup.py	/^    description='A simplified API to PLY (Python Lex & Yacc).',$/;"	kind:variable	line:31
description	../src/ox/automata.py	/^    description = ""$/;"	kind:variable	line:24
dirname	../docs/conf.py	/^dirname = os.path.dirname(__file__)$/;"	kind:variable	line:63
dirname	../setup.py	/^dirname = os.path.dirname(__file__)$/;"	kind:variable	line:15
doctest	../src/ox/tests/test_documentation.py	/^import manuel.doctest$/;"	kind:namespace	line:6
examples.py	../examples/examples.py	1;"	kind:file	line:1
exclude_patterns	../docs/conf.py	/^exclude_patterns = ['_build']$/;"	kind:variable	line:83
extensions	../docs/conf.py	/^extensions = [$/;"	kind:variable	line:32
extras_require	../setup.py	/^    extras_require={$/;"	kind:variable	line:55
fake_input	../src/ox/tests/test_lexer.py	/^        def fake_input(x):$/;"	kind:function	line:59
fake_print	../src/ox/tests/test_lexer.py	/^        def fake_print(x):$/;"	kind:function	line:62
field	../src/ox/lexer.py	/^from sidekick import Record, field, record, fn$/;"	kind:namespace	line:4
find_packages	../setup.py	/^from setuptools import setup, find_packages$/;"	kind:namespace	line:11
fn	../src/ox/lexer.py	/^from sidekick import Record, field, record, fn$/;"	kind:namespace	line:4
has_a	../examples/examples.py	/^has_a = DFA($/;"	kind:variable	line:4
has_ab	../examples/examples.py	/^has_ab = DFA($/;"	kind:variable	line:24
html_static_path	../docs/conf.py	/^html_static_path = ['_static']$/;"	kind:variable	line:146
html_theme	../docs/conf.py	/^html_theme = 'alabaster'$/;"	kind:variable	line:117
htmlhelp_basename	../docs/conf.py	/^htmlhelp_basename = '%sdoc' % project$/;"	kind:variable	line:209
ignore	../src/ox/tests/test_documentation.py	/^import manuel.ignore$/;"	kind:namespace	line:4
install_requires	../setup.py	/^    install_requires=[$/;"	kind:variable	line:51
is_valid_state	../src/ox/automata.py	/^    def is_valid_state(self, state):$/;"	kind:member	line:45
is_valid_token	../src/ox/automata.py	/^    def is_valid_token(self, token):$/;"	kind:member	line:49
language	../docs/conf.py	/^language = None$/;"	kind:variable	line:73
latex_documents	../docs/conf.py	/^latex_documents = [$/;"	kind:variable	line:230
latex_elements	../docs/conf.py	/^latex_elements = {$/;"	kind:variable	line:213
lex	../src/ox/lexer.py	/^    from ply import lex$/;"	kind:namespace	line:98
lexer	../src/ox/__init__.py	/^from . import lexer$/;"	kind:namespace	line:2
lexer	../src/ox/lexer.py	/^    def lexer(expr):$/;"	kind:function	line:113
lexer	../src/ox/lexer.py	/^    def lexer(expr):$/;"	kind:function	line:75
lexer	../src/ox/lexer.py	/^    lexer = field(default=None)$/;"	kind:variable	line:155
lexer.py	../src/ox/lexer.py	1;"	kind:file	line:1
lexpos	../src/ox/lexer.py	/^    lexpos = field(default=None)$/;"	kind:variable	line:154
lineno	../src/ox/lexer.py	/^    lineno = field(default=None)$/;"	kind:variable	line:153
long_description	../setup.py	/^    long_description=codecs.open('README.rst', 'rb', 'utf8').read(),$/;"	kind:variable	line:32
main	../src/ox/lexer.py	/^def main(lexer):$/;"	kind:function	line:131
main	../src/ox/parser.py	/^def main(lexer, parser, *args):$/;"	kind:function	line:96
make_lexer	../src/ox/__init__.py	/^from .lexer import make_lexer, tokenize, Token$/;"	kind:namespace	line:4
make_lexer	../src/ox/lexer.py	/^def make_lexer(rules, which='auto'):$/;"	kind:function	line:12
make_manuel_suite	../src/ox/tests/test_documentation.py	/^def make_manuel_suite(ns):$/;"	kind:function	line:10
make_parser	../src/ox/__init__.py	/^from .parser import make_parser$/;"	kind:namespace	line:5
make_parser	../src/ox/parser.py	/^def make_parser(rules, tokens, start=None):$/;"	kind:function	line:62
make_rule_handler	../src/ox/parser.py	/^def make_rule_handler(rule, handler):$/;"	kind:function	line:74
man_pages	../docs/conf.py	/^man_pages = [$/;"	kind:variable	line:260
manuel	../src/ox/tests/test_documentation.py	/^import manuel.codeblock$/;"	kind:namespace	line:5
manuel	../src/ox/tests/test_documentation.py	/^import manuel.doctest$/;"	kind:namespace	line:6
manuel	../src/ox/tests/test_documentation.py	/^import manuel.ignore$/;"	kind:namespace	line:4
manuel	../src/ox/tests/test_documentation.py	/^import manuel.testing$/;"	kind:namespace	line:7
master_doc	../docs/conf.py	/^master_doc = 'index'$/;"	kind:variable	line:51
name	../setup.py	/^    name='ox-parser',$/;"	kind:variable	line:26
next	../src/ox/automata.py	/^    def next(self, tk):$/;"	kind:member	line:53
next_token	../src/ox/parser.py	/^        def next_token():$/;"	kind:function	line:53
number	../src/ox/tests/test_lexer.py	/^number = lambda x: ox.Token('NUMBER', x)$/;"	kind:variable	line:5
op	../src/ox/tests/test_lexer.py	/^op = lambda x: ox.Token('OP', x)$/;"	kind:variable	line:6
os	../docs/conf.py	/^import os$/;"	kind:namespace	line:17
os	../setup.py	/^import os$/;"	kind:namespace	line:9
os	../src/ox/tests/test_documentation.py	/^import os$/;"	kind:namespace	line:1
ox	../src/ox/tests/test_lexer.py	/^import ox$/;"	kind:namespace	line:2
ox	../src/ox/tests/test_ox.py	/^import ox$/;"	kind:namespace	line:2
package_dir	../setup.py	/^    package_dir={'': 'src'},$/;"	kind:variable	line:49
packages	../setup.py	/^    packages=find_packages('src'),$/;"	kind:variable	line:50
parser	../src/ox/__init__.py	/^from . import parser$/;"	kind:namespace	line:3
parser	../src/ox/parser.py	/^    def parser(tokens: list):$/;"	kind:function	line:48
parser.py	../src/ox/parser.py	1;"	kind:file	line:1
patch	../src/ox/tests/test_lexer.py	/^from mock import patch$/;"	kind:namespace	line:3
path	../setup.py	/^path = os.path.join(dirname, 'src', 'ox', '__meta__.py')$/;"	kind:variable	line:16
platforms	../setup.py	/^    platforms='any',$/;"	kind:variable	line:63
ply_lexer	../src/ox/lexer.py	/^def ply_lexer(rules):$/;"	kind:function	line:91
ply_lexer	../src/ox/tests/test_lexer.py	/^    def ply_lexer(self, rules):$/;"	kind:member	line:18
ply_lexer_error	../src/ox/lexer.py	/^def ply_lexer_error(lex):$/;"	kind:function	line:127
ply_parser	../src/ox/parser.py	/^def ply_parser(rules, tokens, start=None):$/;"	kind:function	line:6
ply_parser_error	../src/ox/parser.py	/^def ply_parser_error(p):$/;"	kind:function	line:70
pprint	../src/ox/parser.py	/^    from pprint import pprint$/;"	kind:namespace	line:100
projdir	../docs/conf.py	/^projdir = os.path.dirname(dirname)$/;"	kind:variable	line:64
project	../docs/conf.py	/^project = 'ox'$/;"	kind:variable	line:54
project_title	../docs/conf.py	/^project_title = project.title()$/;"	kind:variable	line:55
pygments_style	../docs/conf.py	/^pygments_style = 'sphinx'$/;"	kind:variable	line:101
pytest	../src/ox/tests/test_documentation.py	/^import pytest$/;"	kind:namespace	line:3
pytest	../src/ox/tests/test_lexer.py	/^import pytest$/;"	kind:namespace	line:1
pytest	../src/ox/tests/test_ox.py	/^import pytest$/;"	kind:namespace	line:1
re	../src/ox/lexer.py	/^import re$/;"	kind:namespace	line:1
record	../src/ox/lexer.py	/^from sidekick import Record, field, record, fn$/;"	kind:namespace	line:4
record	../src/ox/parser.py	/^from sidekick import record$/;"	kind:namespace	line:3
release	../docs/conf.py	/^release = open(os.path.join(projdir, 'VERSION')).read().strip()$/;"	kind:variable	line:65
rule_handler	../src/ox/parser.py	/^    def rule_handler(p):$/;"	kind:function	line:88
rules	../src/ox/tests/test_lexer.py	/^    def rules(self):$/;"	kind:member	line:11
run	../src/ox/automata.py	/^    def run(self, tk_seq):$/;"	kind:member	line:69
run	../tasks.py	/^from invoke import run, task$/;"	kind:namespace	line:2
setup	../setup.py	/^from setuptools import setup, find_packages$/;"	kind:namespace	line:11
setup.py	../setup.py	1;"	kind:file	line:1
sigma	../src/ox/automata.py	/^    def sigma(self, state, tk):$/;"	kind:member	line:104
sigma	../src/ox/automata.py	/^    def sigma(state, tk):$/;"	kind:member	line:27
simple_lexer	../src/ox/lexer.py	/^def simple_lexer(rules):$/;"	kind:function	line:63
simple_lexer	../src/ox/tests/test_lexer.py	/^    def simple_lexer(self, rules):$/;"	kind:member	line:22
source_suffix	../docs/conf.py	/^source_suffix = '.rst'$/;"	kind:variable	line:45
start	../examples/examples.py	/^    start='err',$/;"	kind:variable	line:5
start	../examples/examples.py	/^    start='none',$/;"	kind:variable	line:25
start	../src/ox/automata.py	/^    start = None$/;"	kind:variable	line:20
states	../examples/examples.py	/^    states={'err', 'ok'},$/;"	kind:variable	line:7
states	../examples/examples.py	/^    states={'none', 'has-a', 'has-b', 'ok'},$/;"	kind:variable	line:27
states	../src/ox/automata.py	/^    states = set()$/;"	kind:variable	line:21
sys	../docs/conf.py	/^import sys$/;"	kind:namespace	line:16
sys	../tasks.py	/^import sys$/;"	kind:namespace	line:1
task	../tasks.py	/^from invoke import run, task$/;"	kind:namespace	line:2
tasks.py	../tasks.py	1;"	kind:file	line:1
templates_path	../docs/conf.py	/^templates_path = ['_templates']$/;"	kind:variable	line:40
test_can_parse_simple_expression	../src/ox/tests/test_lexer.py	/^    def test_can_parse_simple_expression(self, ply_lexer, simple_lexer):$/;"	kind:member	line:25
test_documentation.py	../src/ox/tests/test_documentation.py	1;"	kind:file	line:1
test_issues_an_error_with_invalid_lexer_name	../src/ox/tests/test_lexer.py	/^    def test_issues_an_error_with_invalid_lexer_name(self, rules):$/;"	kind:member	line:51
test_lexer.py	../src/ox/tests/test_lexer.py	1;"	kind:file	line:1
test_lexer_module_main_function	../src/ox/tests/test_lexer.py	/^    def test_lexer_module_main_function(self, ply_lexer):$/;"	kind:member	line:55
test_ox.py	../src/ox/tests/test_ox.py	1;"	kind:file	line:1
test_project_defines_author_and_version	../src/ox/tests/test_ox.py	/^def test_project_defines_author_and_version():$/;"	kind:function	line:5
test_raises_syntax_error_on_malformed_expression	../src/ox/tests/test_lexer.py	/^    def test_raises_syntax_error_on_malformed_expression(self, ply_lexer, simple_lexer):$/;"	kind:member	line:36
test_select_simple_lexer_if_ply_not_present	../src/ox/tests/test_lexer.py	/^    def test_select_simple_lexer_if_ply_not_present(self, rules):$/;"	kind:member	line:43
test_tokenize_function_tokenizes_in_a_single_run	../src/ox/tests/test_lexer.py	/^    def test_tokenize_function_tokenizes_in_a_single_run(self, rules):$/;"	kind:member	line:31
testing	../src/ox/tests/test_documentation.py	/^import manuel.testing$/;"	kind:namespace	line:7
texinfo_documents	../docs/conf.py	/^texinfo_documents = [$/;"	kind:variable	line:274
todo_include_todos	../docs/conf.py	/^todo_include_todos = False$/;"	kind:variable	line:110
tokenize	../src/ox/__init__.py	/^from .lexer import make_lexer, tokenize, Token$/;"	kind:namespace	line:4
tokenize	../src/ox/lexer.py	/^def tokenize(rules, expr, which='auto'):$/;"	kind:function	line:44
transitions	../examples/examples.py	/^    transitions={$/;"	kind:variable	line:28
transitions	../examples/examples.py	/^    transitions={$/;"	kind:variable	line:8
transitions	../src/ox/automata.py	/^    transitions = {}$/;"	kind:variable	line:93
type	../src/ox/lexer.py	/^    type = field()$/;"	kind:variable	line:151
url	../setup.py	/^    url='https:\/\/github.com\/fabiommendes\/ox\/',$/;"	kind:variable	line:30
valid	../examples/examples.py	/^    valid={'ok'},$/;"	kind:variable	line:26
valid	../examples/examples.py	/^    valid={'ok'},$/;"	kind:variable	line:6
validate	../src/ox/automata.py	/^    def validate(self, tk_seq):$/;"	kind:member	line:107
value	../src/ox/lexer.py	/^    value = field()$/;"	kind:variable	line:152
version	../docs/conf.py	/^version = '.'.join(release.split('.')[:2])$/;"	kind:variable	line:66
version	../setup.py	/^    version=version,$/;"	kind:variable	line:27
version	../setup.py	/^version = open('VERSION').read().strip()$/;"	kind:variable	line:14
wraps	../src/ox/lexer.py	/^from functools import wraps$/;"	kind:namespace	line:2
yacc	../src/ox/parser.py	/^    from ply import yacc$/;"	kind:namespace	line:23
zip_safe	../setup.py	/^    zip_safe=False,$/;"	kind:variable	line:62
